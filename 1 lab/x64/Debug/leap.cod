; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__E08BCD6D_leap@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?leap@@YA_NH@Z					; leap
PUBLIC	__JustMyCode_Default
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?leap@@YA_NH@Z DD imagerel $LN6
	DD	imagerel $LN6+130
	DD	imagerel $unwind$?leap@@YA_NH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?leap@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\2 семм\КПО\лабораторные работы КПО\1 lab\leap.cpp
;	COMDAT ?leap@@YA_NH@Z
_TEXT	SEGMENT
tv70 = 192
y$ = 240
?leap@@YA_NH@Z PROC					; leap, COMDAT

; 2    : {

$LN6:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E08BCD6D_leap@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3    :     return ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0);

  0001e	8b 85 f0 00 00
	00		 mov	 eax, DWORD PTR y$[rbp]
  00024	99		 cdq
  00025	83 e2 03	 and	 edx, 3
  00028	03 c2		 add	 eax, edx
  0002a	83 e0 03	 and	 eax, 3
  0002d	2b c2		 sub	 eax, edx
  0002f	85 c0		 test	 eax, eax
  00031	75 14		 jne	 SHORT $LN3@leap
  00033	8b 85 f0 00 00
	00		 mov	 eax, DWORD PTR y$[rbp]
  00039	99		 cdq
  0003a	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0003f	f7 f9		 idiv	 ecx
  00041	8b c2		 mov	 eax, edx
  00043	85 c0		 test	 eax, eax
  00045	75 20		 jne	 SHORT $LN4@leap
$LN3@leap:
  00047	8b 85 f0 00 00
	00		 mov	 eax, DWORD PTR y$[rbp]
  0004d	99		 cdq
  0004e	b9 90 01 00 00	 mov	 ecx, 400		; 00000190H
  00053	f7 f9		 idiv	 ecx
  00055	8b c2		 mov	 eax, edx
  00057	85 c0		 test	 eax, eax
  00059	74 0c		 je	 SHORT $LN4@leap
  0005b	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv70[rbp], 0
  00065	eb 0a		 jmp	 SHORT $LN5@leap
$LN4@leap:
  00067	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv70[rbp], 1
$LN5@leap:
  00071	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv70[rbp]

; 4    : }

  00078	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
?leap@@YA_NH@Z ENDP					; leap
_TEXT	ENDS
END
